generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id                    Int @id @default(autoincrement())
  username              String
  password              String
  role                  String
  director              Director[]
  superadmin            SuperAdmin[]
  coordinator           Coordinator[]
  teacher               Teacher[]
  trainer               Trainer[]
  student               Student[]
}



model SuperAdmin {
  id                    Int @id @default(autoincrement())
  firstname             String
  middlename            String?
  lastname              String
  email                 String
  contact               Int
  profile               String?
  accountStatus         Int
  user_id               Int
  user                  User @relation(fields: [user_id], references: [id])
  
}


model Director {
  id                    Int @id @default(autoincrement())
  firstname             String
  middlename            String?
  lastname              String
  email                 String
  contact               Int
  profile               String?
  accountStatus         Int
  user_id               Int
  user                  User @relation(fields: [user_id], references: [id])
  coordinator           Coordinator[]
  company               Company[]   
}

model Coordinator {
  id                    Int @id @default(autoincrement())
  firstname             String
  middlename            String?
  lastname              String
  email                 String
  contact               Int
  campus                String
  college               String
  program               String
  profile               String?
  accountStatus         Int
  director_id           Int
  user_id               Int
  user                  User @relation(fields: [user_id], references: [id])
  director              Director @relation(fields: [director_id], references: [id]) 
  teacher               Teacher[]
}

model Teacher {
  id                    Int @id @default(autoincrement())
  firstname             String
  middlename            String?
  lastname              String
  email                 String
  contact               Int
  campus                String
  college               String
  program               String
  major                 String
  profile               String?
  accountStatus         Int
  user_id               Int
  coordinator_id        Int
  user                  User @relation(fields: [user_id], references: [id])
  coordinator           Coordinator @relation(fields: [coordinator_id], references: [id])
  student               Student[]
}

model Trainer {
  id                    Int @id @default(autoincrement())
  firstname             String
  middlename            String?
  lastname              String
  email                 String
  contact               Int
  profile               String?
  accountStatus         Int
  company_id            Int
  user_id               Int
  company               Company @relation(fields: [company_id], references: [id])
  user                  User @relation(fields: [user_id], references: [id])
  student               Student[]
}

model Student {
  id                    Int @id @default(autoincrement())
  firstname             String
  middlename            String?
  lastname              String
  email                 String
  contact               Int
  address               String
  gender                String
  campus                String
  college               String
  program               String
  major                 String
  accountStatus         Int
  profile               String?
  areaAssigned_id       Int?
  trainer_id            Int?
  teacher_id            Int
  user_id               Int
  teacher               Teacher  @relation(fields: [teacher_id], references: [id])
  trainer               Trainer?  @relation(fields: [trainer_id], references: [id])
  AreaOfAssignment      AreaOfAssignment?  @relation(fields: [areaAssigned_id], references: [id])
  user                  User      @relation(fields: [user_id], references: [id])
  timesheet             Timesheet[]
  task                  Task[]
}

model Timesheet {
  id                    Int      @id @default(autoincrement())
  timeIn                String
  timeOut               String
  totalHours            Int
  date                  String
  week                  Int
  logStatus             Int
  student_id            Int
  student               Student  @relation(fields: [student_id], references: [id])
}

model Task {
  id Int @id @default(autoincrement())
  taskName              String
  description           String
  date                  String
  student_id            Int
  student               Student @relation(fields: [student_id], references: [id])
}

model Company {
  id                    Int @id @default(autoincrement())
  companyName           String
  address               String
  email                 String
  contact               Int
  moaUpload             String
  profile               String?
  director_id           Int
  director              Director @relation(fields: [director_id], references: [id])
  areaOfAssignment      AreaOfAssignment[]
  trainer               Trainer[]
  
}

model AreaOfAssignment {
  id                    Int @id @default(autoincrement())
  areaName              String
  slot                  Int
  company_id            Int
  company               Company @relation(fields: [company_id], references: [id])
  student               Student[]
}


model Campus {
  id Int @id @default(autoincrement())
  campus_Location       String
  college College[]
}

model College {
  id Int @id @default(autoincrement())
  college_description  String
  campus_id            Int
  campus Campus        @relation(fields: [campus_id], references: [id])
  program              Program[]
}

model Program {
  id Int @id @default(autoincrement())
  program_description  String
  college_id           Int
  college College      @relation(fields: [college_id], references: [id])  
  major                Major[]            
}

model Major {
  id Int @id @default(autoincrement())
  major_description    String
  program_id           Int
  program Program      @relation(fields: [program_id], references: [id])
}


